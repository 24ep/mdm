server {
    listen 80;
    server_name _;

    # CORS for local development
    add_header Access-Control-Allow-Origin $http_origin always;
    add_header Access-Control-Allow-Credentials true always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, apikey, X-Client-Info, X-Requested-With, X-CSRF-Token" always;

    if ($request_method = 'OPTIONS') {
        return 204;
    }

    # PostgREST
    location /rest/ {
        proxy_pass http://supabase-rest:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Auth (GoTrue)
    location /auth/ {
        proxy_pass http://supabase-auth:9999/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Realtime (websocket)
    location /realtime/ {
        proxy_pass http://supabase-realtime:4000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }

    # Storage
    location /storage/v1/ {
        proxy_pass http://supabase-storage:5000/storage/v1/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health
    location /health {
        return 200 'OK';
        add_header Content-Type text/plain;
    }
}


